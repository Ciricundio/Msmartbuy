-- MySQL Script generated by MySQL Workbench
-- Fri Mar 14 10:04:52 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema msmartbuy
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema msmartbuy
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `msmartbuy` DEFAULT CHARACTER SET utf8 ;
USE `msmartbuy` ;

-- -----------------------------------------------------
-- Table `msmartbuy`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`usuario` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  `n_identificacion` BIGINT NULL,
  `tipo_documento` VARCHAR(4) NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `telefono` VARCHAR(15) NOT NULL,
  `correo` VARCHAR(145) NOT NULL,
  `contrasena` VARCHAR(255) NOT NULL,
  `genero` VARCHAR(20) NULL,
  `fecha_nacimiento` DATE NULL,
  `foto` VARCHAR(150) NULL,
  `rol` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  UNIQUE INDEX `n_identificacion_UNIQUE` (`n_identificacion` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`ubicacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`ubicacion` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  `pais` VARCHAR(45) NULL,
  `zona` VARCHAR(45) NULL,
  `direccion_local` VARCHAR(150) NULL,
  `codigo_postal` VARCHAR(8) NULL,
  `referencia` VARCHAR(250) NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`usuario_ubicacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`usuario_ubicacion` (
  `usuario_ID` BIGINT NOT NULL,
  `ubicacion_ID` BIGINT NOT NULL,
  `nombre_identificacion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`usuario_ID`, `ubicacion_ID`),
  INDEX `fk_usuario_has_ubicacion_ubicacion1_idx` (`ubicacion_ID` ASC),
  INDEX `fk_usuario_has_ubicacion_usuario_idx` (`usuario_ID` ASC),
  CONSTRAINT `fk_usuario_has_ubicacion_usuario`
    FOREIGN KEY (`usuario_ID`)
    REFERENCES `msmartbuy`.`usuario` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_has_ubicacion_ubicacion1`
    FOREIGN KEY (`ubicacion_ID`)
    REFERENCES `msmartbuy`.`ubicacion` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`categoria` (
  `ID` INT NOT NULL AUTO_INCREMENT, -- Se agreg√≥ AUTO_INCREMENT
  `categoria` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`resena`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`resena` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  `calificacion` INT NOT NULL,
  `comentario` VARCHAR(200) NOT NULL,
  `fecha` DATE NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`producto` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `marca` VARCHAR(45) NOT NULL,
  `cantidad` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(200) NOT NULL,
  `vistas` INT NULL,
  `sku` VARCHAR(45) NOT NULL,
  `f_inicio_oferta` DATE NULL,
  `f_final_oferta` DATE NULL,
  `foto` VARCHAR(50) NULL,
  `peso` VARCHAR(45) NOT NULL,
  `estado` VARCHAR(45) NOT NULL,
  `precio_unitario` DECIMAL(10, 2) NOT NULL, -- Cambiado a DECIMAL para precios
  `descuento` INT NULL,
  `resena_ID` BIGINT NULL,
  `categoria_ID` INT NULL,
  `proveedor_ID` BIGINT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_producto_resena1_idx` (`resena_ID` ASC),
  INDEX `fk_producto_categoria1_idx` (`categoria_ID` ASC),
  INDEX `fk_producto_usuario1_idx` (`proveedor_ID` ASC),
  CONSTRAINT `fk_producto_resena1`
    FOREIGN KEY (`resena_ID`)
    REFERENCES `msmartbuy`.`resena` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_categoria1`
    FOREIGN KEY (`categoria_ID`)
    REFERENCES `msmartbuy`.`categoria` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_usuario1`
    FOREIGN KEY (`proveedor_ID`)
    REFERENCES `msmartbuy`.`usuario` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`carrito`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`carrito` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  `fecha_creacion` DATE NOT NULL,
  `usuario_ID` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_carrito_usuario1_idx` (`usuario_ID` ASC),
  CONSTRAINT `fk_carrito_usuario1`
    FOREIGN KEY (`usuario_ID`)
    REFERENCES `msmartbuy`.`usuario` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`carrito_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`carrito_producto` (
  `carrito_ID` BIGINT NOT NULL,
  `producto_ID` BIGINT NOT NULL,
  `cantidad` INT NOT NULL,
  `subtotal` BIGINT NOT NULL,
  INDEX `fk_carrito_has_producto_producto1_idx` (`producto_ID` ASC),
  INDEX `fk_carrito_has_producto_carrito1_idx` (`carrito_ID` ASC),
  PRIMARY KEY (`carrito_ID`, `producto_ID`),
  CONSTRAINT `fk_carrito_has_producto_carrito1`
    FOREIGN KEY (`carrito_ID`)
    REFERENCES `msmartbuy`.`carrito` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_carrito_has_producto_producto1`
    FOREIGN KEY (`producto_ID`)
    REFERENCES `msmartbuy`.`producto` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`favorito`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`favorito` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  `usuario_ID` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_favorito_usuario1_idx` (`usuario_ID` ASC),
  CONSTRAINT `fk_favorito_usuario1`
    FOREIGN KEY (`usuario_ID`)
    REFERENCES `msmartbuy`.`usuario` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`favorito_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`favorito_producto` (
  `favorito_ID` BIGINT NOT NULL,
  `producto_ID` BIGINT NOT NULL,
  PRIMARY KEY (`favorito_ID`, `producto_ID`),
  INDEX `fk_favorito_has_producto_producto1_idx` (`producto_ID` ASC),
  INDEX `fk_favorito_has_producto_favorito1_idx` (`favorito_ID` ASC),
  CONSTRAINT `fk_favorito_has_producto_favorito1`
    FOREIGN KEY (`favorito_ID`)
    REFERENCES `msmartbuy`.`favorito` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorito_has_producto_producto1`
    FOREIGN KEY (`producto_ID`)
    REFERENCES `msmartbuy`.`producto` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`color`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`color` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `color` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`producto_color`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`producto_color` (
  `producto_ID` BIGINT NOT NULL,
  `color_ID` INT NOT NULL,
  PRIMARY KEY (`producto_ID`, `color_ID`),
  INDEX `fk_producto_has_color_color1_idx` (`color_ID` ASC),
  INDEX `fk_producto_has_color_producto1_idx` (`producto_ID` ASC),
  CONSTRAINT `fk_producto_has_color_producto1`
    FOREIGN KEY (`producto_ID`)
    REFERENCES `msmartbuy`.`producto` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_has_color_color1`
    FOREIGN KEY (`color_ID`)
    REFERENCES `msmartbuy`.`color` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`tarjeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`tarjeta` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `numero_tarjeta` BIGINT NOT NULL,
  `fecha_expedicion` DATE NOT NULL,
  `cvv` INT NOT NULL,
  `tipo` VARCHAR(25) NOT NULL,
  `usuario_ID` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  UNIQUE INDEX `numero_tarjeta_UNIQUE` (`numero_tarjeta` ASC),
  INDEX `fk_tarjeta_usuario1_idx` (`usuario_ID` ASC),
  CONSTRAINT `fk_tarjeta_usuario1`
    FOREIGN KEY (`usuario_ID`)
    REFERENCES `msmartbuy`.`usuario` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`metodo_pago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`metodo_pago` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `pago` VARCHAR(45) NULL,
  `tarjeta_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_table1_tarjeta1_idx` (`tarjeta_ID` ASC),
  CONSTRAINT `fk_table1_tarjeta1`
    FOREIGN KEY (`tarjeta_ID`)
    REFERENCES `msmartbuy`.`tarjeta` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`factura` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  `fecha` DATE NOT NULL,
  `nota` VARCHAR(200) NULL,
  `valor_venta` DECIMAL(12, 2) NOT NULL,
  `valor_envio` DECIMAL(10, 2) NOT NULL,
  `total` DECIMAL(12, 2) NOT NULL,
  `estado` VARCHAR(45) NOT NULL,
  `usuario_ID` BIGINT NOT NULL,
  `metodo_pago_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_factura_usuario1_idx` (`usuario_ID` ASC),
  INDEX `fk_factura_metodo_pago1_idx` (`metodo_pago_ID` ASC),
  CONSTRAINT `fk_factura_usuario1`
    FOREIGN KEY (`usuario_ID`)
    REFERENCES `msmartbuy`.`usuario` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_factura_metodo_pago1`
    FOREIGN KEY (`metodo_pago_ID`)
    REFERENCES `msmartbuy`.`metodo_pago` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`detalle_factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`detalle_factura` (
  `factura_ID` BIGINT NOT NULL,
  `producto_ID` BIGINT NOT NULL,
  `cantidad_producto` INT NOT NULL,
  `subtotal` DECIMAL(12, 2) NOT NULL,
  PRIMARY KEY (`factura_ID`, `producto_ID`),
  INDEX `fk_factura_has_producto_producto1_idx` (`producto_ID` ASC),
  INDEX `fk_factura_has_producto_factura1_idx` (`factura_ID` ASC),
  CONSTRAINT `fk_factura_has_producto_factura1`
    FOREIGN KEY (`factura_ID`)
    REFERENCES `msmartbuy`.`factura` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_factura_has_producto_producto1`
    FOREIGN KEY (`producto_ID`)
    REFERENCES `msmartbuy`.`producto` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`soporte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`soporte` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(200) NOT NULL,
  `fecha_solicitud` DATE NOT NULL,
  `estado` VARCHAR(45) NOT NULL,
  `solicitante_ID` BIGINT NOT NULL,
  `asignado_ID` BIGINT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_soporte_usuario1_idx` (`solicitante_ID` ASC),
  INDEX `fk_soporte_usuario2_idx` (`asignado_ID` ASC),
  CONSTRAINT `fk_soporte_usuario1`
    FOREIGN KEY (`solicitante_ID`)
    REFERENCES `msmartbuy`.`usuario` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_soporte_usuario2`
    FOREIGN KEY (`asignado_ID`)
    REFERENCES `msmartbuy`.`usuario` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `msmartbuy`.`mensaje`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `msmartbuy`.`mensaje` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  `fecha_mensaje` DATE NOT NULL,
  `contenido` VARCHAR(250) NOT NULL,
  `respuesta_mensaje` BIGINT NULL,
  `soporte_ID` BIGINT NOT NULL,
  `usuario_ID` BIGINT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  INDEX `fk_mensaje_mensaje1_idx` (`respuesta_mensaje` ASC),
  INDEX `fk_mensaje_soporte1_idx` (`soporte_ID` ASC),
  INDEX `fk_mensaje_usuario1_idx` (`usuario_ID` ASC),
  CONSTRAINT `fk_mensaje_mensaje1`
    FOREIGN KEY (`respuesta_mensaje`)
    REFERENCES `msmartbuy`.`mensaje` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mensaje_soporte1`
    FOREIGN KEY (`soporte_ID`)
    REFERENCES `msmartbuy`.`soporte` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mensaje_usuario1`
    FOREIGN KEY (`usuario_ID`)
    REFERENCES `msmartbuy`.`usuario` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
